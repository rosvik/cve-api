use libcve::file;

#[tokio::main]
async fn main() {
  let mut years = file::years().unwrap();

  let mut client = database::get_connection().await.unwrap();

  match database::init(&mut client).await {
    Ok(_) => println!("Table created"),
    Err(e) => println!("Init returned Err, assuming things are ok. ({:?})", e),
  }
  years.sort();
  years.reverse();

  for year in years {
    let mut groups = file::groups(&year).unwrap();
    groups.sort();
    for group in groups.iter() {
      let mut files = file::files(&year, group).unwrap();
      files.sort();
      for file in files.iter() {
        let cve_id = file.split('.').next().unwrap();
        let cve = file::cve_by_id(cve_id.to_string()).unwrap();
        match database::insert(&mut client, cve).await {
          Ok(_) => println!("Inserted {}", cve_id),
          Err(e) => println!("Failed to insert {}, continuing. ({:?})", cve_id, e),
        }
      }
    }
  }
}
