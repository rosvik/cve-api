use serde::{Deserialize, Serialize};
use serde_with::skip_serializing_none;

#[skip_serializing_none]
#[derive(Serialize, Deserialize)]
#[allow(non_snake_case)]
pub struct CveMetadata {
    pub cveId: String,
    pub assignerOrgId: String,
    pub state: String,
    pub assignerShortName: Option<String>,
    pub dateReserved: Option<String>,
    pub datePublished: Option<String>,
    pub dateUpdated: Option<String>,
}

#[skip_serializing_none]
#[derive(Serialize, Deserialize)]
#[allow(non_snake_case)]
pub struct Description {
    pub lang: String,
    pub value: String,
    pub supportingMedia: Option<Vec<SupportingMedia>>,
}

#[derive(Serialize, Deserialize)]
#[allow(non_snake_case)]
pub struct SupportingMedia {
    pub r#type: String,
    pub base64: bool,
    pub value: String,
}

#[skip_serializing_none]
#[derive(Serialize, Deserialize)]
#[allow(non_snake_case)]
pub struct ProviderMetadata {
    pub orgId: String,
    pub shortName: Option<String>,
    pub dateUpdated: Option<String>,
}
