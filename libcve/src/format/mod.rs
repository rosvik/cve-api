use self::{published::Published, rejected::Rejected};
use serde::{Deserialize, Serialize};
use serde_json::Result;

pub mod published;
pub mod rejected;
pub mod shared;

#[derive(Serialize, Deserialize, Clone, Debug)]
#[serde(untagged)] // https://serde.rs/enum-representations.html#untagged
#[allow(non_snake_case)]
pub enum CVE {
  Published(Box<Published>),
  Rejected(Box<Rejected>),
}

pub fn parse_json_string(s: &str) -> Result<CVE> {
  serde_json::from_str(s)
}

pub fn validate(data: serde_json::Value) -> Result<CVE> {
  let cve: CVE = serde_json::from_value(data)?;
  Ok(cve)
}
