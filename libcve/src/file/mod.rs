use serde_json::from_reader;
use std::fs::File;
use std::io::{BufReader, Result};

use crate::format::CVE;

const BASE_PATH: &str = "../cvelistV5/cves/";

pub fn get_file(id: String) -> Result<CVE> {
    let path = file_path(id);

    let file_path = format!("{}{}/{}/{}.json", PATH, year, id_part, id);

    let file = match File::open(file_path) {
        Ok(file) => file,
        Err(e) => return Err(e.into()),
    };

    let result = from_reader(BufReader::new(file));
    let cve: CVE = match result {
        Ok(cve) => cve,
        Err(e) => return Err(e.into()),
    };

    if cve.cveMetadata.state != "PUBLISHED" {
        return Err(std::io::Error::new(
            std::io::ErrorKind::Other,
            "CVE is not published",
        ));
    }

    Ok(cve)
}

/**
 * Get path to the json file, based on BASE_PATH and the CVE id .
 * `CVE-YYYY-NNNNN`
 */
fn file_path(id: String) -> String {
    let year = &id[4..8]; // YYYY
    let num = &id[9..]; // NNNNN
    let group = format!("{}xxx", &num[..num.len() - 3]);

    format!(
        "{base_path}{year}/{group}/{id}.json",
        base_path = BASE_PATH,
        year = year,
        group = group,
        id = id
    )
}
