use serde_json::{from_reader, Result};
use std::fs::File;
use std::io::BufReader;

use crate::format::CVE;

const PATH: &str = "../cvelistV5/cves/";

pub fn get_file(id: String) -> Result<CVE> {
    let (year, id_part) = get_file_path(&id);

    let file_path = format!("{}{}/{}/{}.json", PATH, year, id_part, id);

    println!("File path: {}", file_path);

    let file = File::open(file_path).expect("Could not open file");

    let reader = BufReader::new(file);
    let result: Result<CVE> = from_reader(reader);
    let cve = result.expect("Could not match file to CVE struct");

    Ok(cve)
}

fn get_file_path(id: &String) -> (String, String) {
    let year = &id[4..8];
    let num = &id[9..];

    // Replace the 3 last digits with xxx
    let id_slug = format!("{}xxx", &num[..num.len() - 3]);
    (year.to_string(), id_slug)
}
