use axum::{extract::Query, routing::get, Router};
use serde::Deserialize;
use std::net::SocketAddr;

use libcve::file::get_file;

#[tokio::main]
async fn main() {
    let app = Router::new().route("/cve", get(handler));

    let addr = SocketAddr::from(([127, 0, 0, 1], 3000));
    println!("listening on http://{}", addr);
    axum::Server::bind(&addr)
        .serve(app.into_make_service())
        .await
        .unwrap();
}

#[derive(Deserialize)]
struct SingleCveParameters {
    id: String,
}

async fn handler(Query(query): Query<SingleCveParameters>) -> String {
    let st = get_file(query.id);
    format!("{}\n", st.unwrap().cveMetadata.cveId)
}
